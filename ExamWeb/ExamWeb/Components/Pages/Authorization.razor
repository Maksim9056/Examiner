@page "/Authorization"                                                                                             
@rendermode InteractiveServer 
@inject IHttpClientFactory ClientFactory 
@inject NavigationManager NavigationManager 
<h1>Авторизация</h1> 
 
 
 
<div> 
    <p>Почта</p> 
    <input type="email" @bind="EMAIL" /> 
</div> 
 
<div> 
    <p>Пароль</p> 
    <input type="password" @bind="Password" /> 
</div> 
 
<h1>Current URL Address: @urlAddres</h1> 
 
<style> 
    .button { 
        margin-top: 10px; /* Измените значение по вашему усмотрению */ 
    } 
 
    .another-button { 
        margin-top: 10px; 
        margin-right: 90px; /* Измените значение по вашему усмотрению */ 
    } 
</style> 
 
<div> 
    <button type="submit" class="button" @onclick="SubmitForm">Войти</button> 
</div> 
 
<div> 
    <button type="submit" class="another-button" @onclick="RegForm">Регистрация</button> 
</div> 
@code { 
     [Parameter] 
    public string urlAddress { get; set; } // Corrected property name 
    string Password { get; set; } 
 
    string EMAIL { get; set; } 
    [Parameter] 
    public string urlAddres { get; set; } 
    public string url = "http://localhost:5000/api/UsersControllers/GETCheck/"; 
 
    User users; 
 
    HttpClient httpClient = null!; 
 
    private async void SubmitForm() 
    { 
        try 
        { 
 
 
            if (!string.IsNullOrEmpty(Password) && !string.IsNullOrEmpty(EMAIL)) 
            { 
                httpClient = ClientFactory.CreateClient(); 
                httpClient.BaseAddress = new Uri(url + EMAIL + "," + Password); 
                await LoadData(); 
            } 
        } 
        catch (Exception) 
        { 
 
        } 
    } 
 
    private void RegForm() 
    { 
        try 
        { 
            NavigationManager.NavigateTo($"/RegUser"); 
 
        } 
        catch (Exception) 
        { 
 
        } 
    } 
    async Task LoadData() 
    { 
        // try 
        // { 
        //     users = await httpClient.GetFromJsonAsync<Users>(httpClient.BaseAddress); 
 
 
        //     if (users == null) 
        //     { 
 
        //     } 
        //     else 
        //     { 
 
        //          userStateService.users = users; 
        //         NavigationManager.NavigateTo($"/UserUse"); 
        //     } 
 
 
        // } 
        // catch (Exception) 
        // { 
 
        // } 
    } 
}